<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AXCIgC5REAREQBERAEREB//Z
</value>
  </data>
</root>